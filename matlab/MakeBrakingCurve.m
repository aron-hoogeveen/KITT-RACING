close all
clear distComb;
clear Xcomb;
clear V_poly;
clear X_poly;
% Braking curve will be generated by specifying constant speed of the car
const_speed = 18.5;

%plot(sensorR); hold on; plot(sensorL);
% truncate sensors (vanaf moment van remmen)
begin = 50;
ending = 77;

d1 = sensorL(begin:ending);
d2 = sensorR(begin:ending);

% Converts measurements to curves:
for i = 1:length(d1)
    distComb(i) = (d1(i) + d2(i))/2;
end

figure(1);

%Flip the distance (as lowering of sensorvalues indicates more distance
%traveled)
Xcomb = distComb(1)-distComb;
plot(Xcomb);
title('Xcomb');

% Fit the curve to polynominal corresponding to constant speed and stop
% distance
% Line part
line_samples = 0:16;
line_part = polyfit(line_samples, Xcomb(line_samples+1), 1);
X_line = polyval(line_part, line_samples);


poly_samples = 16:44;
ri = 10.244;
pu = 153.31275;
%aplusc= ri-pu;
%bmin2c = ri - 2*(ri-pu);
b = ri;
c = pu;
% (poly) Braking part
ft = fittype(@(a, x) a*(x-16)A.^2+b*(x-16)+c);
FO = fit(poly_samples',X_combpoly',ft);
%poly_part = polyfitB(samples, Xcomb(17:45), 2, 153.127450980392);
%X_poly = polyval(poly_part, samples);

%Xcombi = [X_line; X_poly];

plot(FO);


